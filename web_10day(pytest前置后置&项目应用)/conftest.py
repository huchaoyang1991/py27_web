"""
============================
Author:柠檬班-木森
Time:2020/5/16   10:52
E-mail:3247119728@qq.com
Company:湖南零檬信息技术有限公司
============================
"""
import pytest

#
# @pytest.fixture(scope='session', autouse=True)
# def session_fixture():
#     # 前置条件
#     print("-------会话级别-----执行的前置条件--------------------")
#     yield
#     # 后置条件
#     print("-------会话级别-----执行的后置条件--------------------")


# 用例级别的前置后置条件
@pytest.fixture()
def case_fixture():
    # 前置条件
    print("------------用例执行的前置条件--------------------")
    yield
    # 后置条件
    print("------------用例执行的后置条件--------------------")


# 用例级别的前置后置条件
@pytest.fixture()
def case02_fixture():
    # 前置条件
    print("--------02----用例执行的前置条件--------------------")
    yield
    # 后置条件
    print("---------02---用例执行的后置条件--------------------")


@pytest.fixture()
def case03_fixture():
    # 前置条件
    print("--------03----用例执行的前置条件--------------------")
    yield
    # 后置条件
    print("---------03---用例执行的后置条件--------------------")


# 类级别的前置后置
@pytest.fixture(scope='class')
def class_fixture():
    # 前置条件
    print("-------用例类-----执行的前置条件--------------------")
    yield
    # 后置条件
    print("-------用例类-----执行的后置条件--------------------")


@pytest.fixture(scope='class')
def class02_fixture():
    # 前置条件
    print("-------用例类-----执行的前置条件--------------------")
    yield
    # 后置条件
    print("-------用例类-----执行的后置条件--------------------")


# 模块级别的前置后置:
# autouse=True：模块级别的前后置会自动执行，不需要手动添加到指定的类,或函数上去
# @pytest.fixture(scope='module', autouse=True)
# def module_fixture():
#     # 前置条件
#     print("-------模块-----执行的前置条件--------------------")
#     yield
#     # 后置条件
#     print("-------模块-----执行的后置条件--------------------")
